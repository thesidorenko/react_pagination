{"version":3,"sources":["components/Pagination/Pagination.tsx","utils.ts","App.tsx","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","totalPage","Math","ceil","arrayOfPages","from","to","i","push","getPages","className","classNames","disabled","href","onClick","map","number","active","changePage","items","numbers","n","getNumbers","App","useState","setCurrentPage","countItems","setCountItems","startIndex","endIndex","itemsPerPage","slice","length","id","value","onChange","e","parseInt","target","htmlFor","page","item","ReactDOM","render","document","getElementById"],"mappings":"sNAWaA,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAYC,KAAKC,KAAKN,EAAQC,GAC9BM,ECRD,SAAkBC,EAAcC,GAGrC,IAFA,IAAMF,EAAe,GAEZG,EAAIF,EAAME,GAAKD,EAAIC,GAAK,EAC/BH,EAAaI,KAAKD,GAGpB,OAAOH,EDCcK,CAAS,EAAGR,GAE7BF,EAAcE,IAEhBF,EAAc,GAmBhB,OAEE,qBAAIW,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAW,YAAa,CACrCC,SAA0B,IAAhBb,IADZ,SAIE,mBACE,UAAQ,WACRW,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBd,EACfe,QAxBe,WACD,IAAhBf,GACFC,EAAaD,EAAc,IAiBzB,oBAUDK,EAAaW,KAAI,SAAAC,GAChB,OACE,oBAEEN,UAAWC,IAAW,YAAa,CACjCM,OAAQD,IAAWjB,IAHvB,SAME,mBACE,UAAQ,WACRW,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBA7CF,SAACE,GAClBhB,EAAagB,GA4CYE,CAAWF,IAJ5B,SAMGA,KAXEA,MAiBX,oBAAIN,UAAWC,IAAW,YAAa,CACrCC,SAAUb,IAAgBE,IAD5B,SAIE,mBACE,UAAQ,WACRS,UAAU,YACVG,KAAK,QACL,gBAAed,IAAgBE,EAC/Ba,QApDe,WACjBf,EAAcE,GAChBD,EAAaD,EAAc,IA6CzB,wBE5EFoB,EDNC,SAAoBd,EAAcC,GAGvC,IAFA,IAAMc,EAAU,GAEPC,EAAIhB,EAAMgB,GAAKf,EAAIe,GAAK,EAC/BD,EAAQZ,KAAKa,GAGf,OAAOD,ECDKE,CAAW,EAAG,IACzBP,KAAI,SAAAM,GAAC,qBAAYA,MAEPE,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAOzB,EAAP,KAAoB0B,EAApB,KACA,EAAoCD,mBAAiB,GAArD,mBAAOE,EAAP,KAAmBC,EAAnB,KAEMC,GAAc7B,EAAc,GAAK2B,EACjCG,EAAWD,EAAaF,EACxBI,EAAeX,EAAMY,MAAMH,EAAYC,GAY7C,OACE,sBAAKnB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWX,EADX,mBACiC6B,EAAa,EAD9C,cACqDA,EAAaE,EAAaE,OAD/E,aAIA,sBAAKtB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRuB,GAAG,kBACHvB,UAAU,eACVwB,MAAOR,EACPS,SAzBe,SAACC,GAExBT,EAAcU,SAASD,EAAEE,OAAOJ,QAChCT,EAAe,IAiBT,UAOE,wBAAQS,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOK,QAAQ,kBAAkB7B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEb,MAAO,GACPC,QAAS4B,EACT3B,YAAaA,EACbC,aArCmB,SAACwC,GACxBf,EAAee,MAuCb,6BACGV,EAAaf,KAAI,SAAA0B,GAChB,OACE,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YC/DpCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.c6d1aa32.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { getPages } from '../../utils';\n\ninterface Props {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void\n}\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const totalPage = Math.ceil(total / perPage);\n  const arrayOfPages = getPages(1, totalPage);\n\n  if (currentPage > totalPage) {\n    /* eslint-disable */\n    currentPage = 1;\n  }\n\n  const changePage = (number: number) => {\n    onPageChange(number);\n  };\n\n  const handlePrevPage = () => {\n    if (currentPage !== 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const handleNextPage = () => {\n    if (currentPage < totalPage) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n\n    <ul className=\"pagination\">\n      <li className={classNames('page-item', {\n        disabled: currentPage === 1,\n      })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={handlePrevPage}\n        >\n          «\n        </a>\n      </li>\n      {arrayOfPages.map(number => {\n        return (\n          <li\n            key={number}\n            className={classNames('page-item', {\n              active: number === currentPage,\n            })}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${number}`}\n              onClick={() => changePage(number)}\n            >\n              {number}\n            </a>\n          </li>\n        );\n      })}\n\n      <li className={classNames('page-item', {\n        disabled: currentPage === totalPage,\n      })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === totalPage}\n          onClick={handleNextPage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n\nexport function getPages(from: number, to: number) {\n  const arrayOfPages = [];\n\n  for (let i = from; i <= to; i += 1) {\n    arrayOfPages.push(i);\n  }\n\n  return arrayOfPages;\n}\n","import React, { ChangeEvent, useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [countItems, setCountItems] = useState<number>(5);\n\n  const startIndex = (currentPage - 1) * countItems;\n  const endIndex = startIndex + countItems;\n  const itemsPerPage = items.slice(startIndex, endIndex);\n\n  const handleCountItems = (e: ChangeEvent<HTMLSelectElement>) => {\n    // eslint-disable-next-line\n    setCountItems(parseInt(e.target.value));\n    setCurrentPage(1);\n  };\n\n  const handleChangePage = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${startIndex + 1} - ${startIndex + itemsPerPage.length} of 42)`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={countItems}\n            onChange={handleCountItems}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={42}\n        perPage={countItems}\n        currentPage={currentPage}\n        onPageChange={handleChangePage}\n      />\n\n      <ul>\n        {itemsPerPage.map(item => {\n          return (\n            <li data-cy=\"item\" key={item}>\n              {item}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}